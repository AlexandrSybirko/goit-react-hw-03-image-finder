{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/ImageLoader/ImageLoader.module.css","components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryErrorView/ImageGalleryErrorView.js","components/ImageLoader/ImageLoader.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/services/images-api.js","components/ImageGalleryInfo/ImagesGalleryInfo.js","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","imageName","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","reset","toast","info","this","className","s","SearchForm","type","SearchFormButton","SearchFormButtonLabel","onChange","SearchFormInput","autoComplete","autoFocus","placeholder","Component","ImageGalleryErrorView","message","role","ImageLoader","Loader","color","height","width","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","src","alt","createPortal","Overlay","onClick","ImageGalleryItem","showModal","toggleModal","largeImageUrl","ImageGalleryItemImage","ImageGallery","images","map","image","index","webformatURL","tags","largeImageURL","Button","scroll","scrollToBottom","ButtonDiv","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","Status","ImagesGalleryInfo","error","status","onClickLoadMore","prevState","prevProps","prevName","nextName","prevPage","nextPage","imagesAPI","catch","hits","App","handleFormSubmit","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,sBAAwB,kD,mBCAxGD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,yB,mBCAjED,EAAOC,QAAU,CAAC,OAAS,8B,mBCA3BD,EAAOC,QAAU,CAAC,aAAe,qC,2KC6DlBC,E,4MAxDbC,MAAQ,CACNC,UAAW,I,EAIbC,aAAe,SAAAC,GAEb,EAAKC,SAAS,CAAEH,UAAWE,EAAEE,cAAcC,MAAMC,iB,EAGnDC,aAAe,SAAAL,GAEbA,EAAEM,iBACkC,KAAhC,EAAKT,MAAMC,UAAUS,QAIzB,EAAKC,MAAMC,SAAS,EAAKZ,MAAMC,WAG/B,EAAKY,SANHC,IAAMC,KAAK,a,sDAUbC,KAAKZ,SAAS,CACXH,UAAW,O,+BAKd,OACE,wBAAQgB,UAAWC,IAAEnB,UAArB,SACE,uBAAMkB,UAAWC,IAAEC,WAAYP,SAAUI,KAAKR,aAA9C,UACE,wBAAQY,KAAK,SAASH,UAAWC,IAAEG,iBAAnC,SACC,sBAAMJ,UAAWC,IAAEI,sBAAnB,sBAEC,uBACAhB,MAAOU,KAAKhB,MAAMC,UAClBsB,SAAUP,KAAKd,aACfe,UAAWC,IAAEM,gBACbJ,KAAK,OACLK,aAAa,MACbC,WAAS,EACTC,YAAY,sC,GA5CAC,aCSTC,MAZf,YAA6C,IAAZC,EAAW,EAAXA,QAC/B,OACE,qBAAKC,KAAK,QAAV,SACE,wCAAWD,Q,0CCAIE,E,uKAGjB,OACE,cAAC,IAAD,CAAQf,UAAWC,IAAEe,OAAQb,KAAK,QAAQc,MAAM,UAAUC,OAAQ,GAAIC,MAAO,S,GAJ1CR,a,mDCDnCS,EAAYC,SAASC,cAAc,eACpBC,E,4MAUjBC,cAAgB,SAAAtC,GACM,WAAXA,EAAEuC,MAAoB,EAAK/B,MAAMgC,W,EAG5CC,oBAAsB,SAAAzC,GACdA,EAAEE,gBAAkBF,EAAE0C,QACtB,EAAKlC,MAAMgC,W,kEAdfG,OAAOC,iBAAiB,UAAW/B,KAAKyB,iB,6CAKhDK,OAAOE,oBAAoB,UAAWhC,KAAKyB,iB,+BAa7B,IAAD,EACgBzB,KAAKL,MAAlBsC,EADH,EACGA,IAAKC,EADR,EACQA,IACb,OACgBC,uBACR,qBAAKlC,UAAWC,IAAEkC,QAASC,QAASrC,KAAK4B,oBAAzC,SACI,qBAAK3B,UAAWC,IAAEsB,MAAlB,SACI,qBAAKS,IAAKA,EAAKC,IAAKA,QAExBb,O,GA5BeT,aCwCpB0B,E,4MAtCbtD,MAAQ,CACNuD,WAAW,G,EAKbC,YAAc,WACZ,EAAKpD,UAAS,kBAAoB,CAChCmD,WADY,EAAGA,e,uDAKT,IAAD,EAC6BvC,KAAKL,MAAjCsC,EADD,EACCA,IAAKC,EADN,EACMA,IAAKO,EADX,EACWA,cACVF,EAAcvC,KAAKhB,MAAnBuD,UAER,OACE,qBAAItC,UAAWC,IAAEoC,iBAAjB,UACE,qBACED,QAASrC,KAAKwC,YACdP,IAAKA,EACLC,IAAKA,EACLjC,UAAWC,IAAEwC,wBAEdH,GACC,cAAC,EAAD,CAAOZ,QAAS3B,KAAKwC,YAAaP,IAAKQ,EAAeP,IAAKA,W,GA1BtCtB,aCkBhB+B,MApBf,YAAiC,IAAVC,EAAS,EAATA,OACrB,OACE,oBAAI3C,UAAWC,IAAEyC,aAAjB,SACGC,EAAOC,KAAI,SAACC,EAAOC,GAAR,OACV,cAAC,EAAD,CACEd,IAAKa,EAAME,aACXd,IAAKY,EAAMG,KACXR,cAAeK,EAAMI,eAChBH,S,yBCkBAI,E,4MAtBbC,OAAS,WACP,EAAKzD,MAAM0C,UACTe,gBAAOC,kB,uDAIT,OACE,qBAAKpD,UAAWC,IAAEoD,UAAlB,SACE,wBAAQjB,QAASrC,KAAKoD,OAAQnD,UAAWC,IAAEiD,OAAQ/C,KAAK,SAAxD,6B,GAXaQ,aCSrB,IAIe2C,EAJH,CACVC,YAfF,SAAqBC,EAAMC,GAGzB,OAAOC,MAAM,GAAD,OADO,0BACP,eACQF,EADR,uBAFO,qCAEP,6DAC4F,GAALC,IACjGE,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,OAAO,IAAIC,MAAM,iCCD9BC,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAwEGC,E,4MApEbpF,MAAQ,CACN4D,OAAQ,GACRyB,MAAO,KACPC,OAAQH,EACRT,KAAM,G,EA0BRa,gBAAkB,WAChB,EAAKnF,UAAS,SAAAoF,GAAS,MAAK,CAC1Bd,KAAMc,EAAUd,KAAO,O,iEAvBRe,EAAWD,GAAY,IAAD,OACjCE,EAAWD,EAAUxF,UACrB0F,EAAW3E,KAAKL,MAAMV,UACtB2F,EAAWJ,EAAUd,KACrBmB,EAAW7E,KAAKhB,MAAM0E,KAExBgB,IAAaC,GACf3E,KAAKZ,SAAS,CAAEsE,KAAM,IAGpBgB,IAAaC,GAAYC,IAAaC,IACxC7E,KAAKZ,SAAS,CAAEkF,OAAQH,IAExBW,EAAUtB,YAAYmB,EAAUE,GAC7BjB,MAAK,SAAAhB,GAAM,OAAI,EAAKxD,SAAS,CAAEwD,SAAQ0B,OAAQH,OAC/CY,OAAM,SAAAV,GAAK,OAAI,EAAKjF,SAAS,CAAEiF,QAAOC,OAAQH,U,+BAc3C,IAAD,EACmBnE,KAAKhB,MAAvBqF,EADD,EACCA,MAAOC,EADR,EACQA,OAEf,MAAe,SAAXA,EACK,mDAGM,YAAXA,EACK,cAAC,EAAD,IAGM,aAAXA,EACK,cAAC,EAAD,CAAuBxD,QAASuD,EAAMvD,UAGhC,aAAXwD,EAEA,qCACE,cAAC,EAAD,CAAc1B,OAAQ5C,KAAKhB,MAAM4D,OAAOoC,OACxC,cAAC,EAAD,CAAQ3C,QAASrC,KAAKuE,gBAAiBb,KAAM1D,KAAKhB,MAAM0E,eAJ9D,M,GAtD4B9C,aCajBqE,E,4MArBbjG,MAAQ,CACNC,UAAW,I,EAIbiG,iBAAmB,SAAAjG,GACjB,EAAKG,SAAS,CAAEH,e,uDAIhB,OACE,qCACE,cAAC,EAAD,CAAWW,SAAUI,KAAKkF,mBAE1B,cAAC,EAAD,CAAkBjG,UAAWe,KAAKhB,MAAMC,YACxC,cAAC,IAAD,CAAgBkG,UAAW,a,GAhBjBvE,aCKHwE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxE,SAASyE,eAAe,SAM1BX,K,kBCfAvG,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,sC","file":"static/js/main.2a2f0dcd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2rZof\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2gxMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2QfD_\",\"Modal\":\"Modal_Modal__PLjed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonDiv\":\"Button_ButtonDiv__1dLO4\",\"Button\":\"Button_Button__2GDB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"ImageLoader_Loader__t0qr6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3zgCT\"};","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport s from './Searchbar.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    imageName: '',\r\n  };\r\n\r\n   \r\n  handleChange = e => {\r\n    \r\n    this.setState({ imageName: e.currentTarget.value.toLowerCase() })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    \r\n    e.preventDefault();\r\n    if (this.state.imageName.trim() === '') {\r\n      toast.info('NO DATA.');\r\n      return\r\n    }\r\n    this.props.onSubmit(this.state.imageName);\r\n\r\n    \r\n    this.reset();\r\n  }  \r\n  \r\n  reset() {\r\n    this.setState({\r\n       imageName: ''\r\n    })\r\n  } \r\n\r\n  render() {\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n           <span className={s.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n            <input\r\n            value={this.state.imageName}\r\n            onChange={this.handleChange}\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />             \r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n  Searchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;","import PropTypes from 'prop-types';\r\n\r\nfunction ImageGalleryErrorView({ message }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>ERROR: {message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nImageGalleryErrorView.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryErrorView;","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './ImageLoader.module.css'\r\n\r\nexport default class ImageLoader extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Loader className={s.Loader} type=\"Audio\" color=\"#00BFFF\" height={80} width={80}\r\n        \r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css'\r\n\r\nconst modalRoot = document.querySelector('#modal-root')\r\nexport default class Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown)\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        \r\nwindow.removeEventListener('keydown', this.handleKeyDown)\r\n     }\r\n    \r\n    handleKeyDown = e => {\r\n            if(e.code === 'Escape') {this.props.onClose()}\r\n    }\r\n    \r\n    handleBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose()\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { src, alt } = this.props;\r\n        return (\r\n                        createPortal(\r\n                <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n                    <div className={s.Modal}>\r\n                        <img src={src} alt={alt}/>\r\n                    </div>\r\n            </div>, modalRoot)\r\n            \r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport s from './ImageGalleryItem.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '../Modal/Modal'\r\n\r\nclass ImageGalleryItem extends Component {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n\r\n  \r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { src, alt, largeImageUrl } = this.props;\r\n    const { showModal } = this.state;\r\n\r\n    return (\r\n      <li className={s.ImageGalleryItem}>\r\n        <img\r\n          onClick={this.toggleModal}\r\n          src={src}\r\n          alt={alt}\r\n          className={s.ImageGalleryItemImage}\r\n        />\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal} src={largeImageUrl} alt={alt} />\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImageUrl: PropTypes.string.isRequired,\r\n  };\r\n\r\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\r\n\r\nfunction ImageGallery({images}) {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {images.map((image, index) => (\r\n        <ImageGalleryItem\r\n          src={image.webformatURL}\r\n          alt={image.tags}\r\n          largeImageUrl={image.largeImageURL}\r\n          key={index}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n    \r\n} \r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n           \r\n    \r\n\r\n\r\n\r\n","import { Component } from 'react';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport s from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Button extends Component {\r\n  \r\n\r\n  scroll = () => {\r\n    this.props.onClick();\r\n      scroll.scrollToBottom();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.ButtonDiv}>\r\n        <button onClick={this.scroll} className={s.Button} type=\"button\">\r\n        Load more\r\n      </button>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n  };\r\n\r\nexport default Button;\r\n","function fetchImages(name, page) {\r\n     const API_KEY = '19089587-d048225f5585fc89c8e323f31';\r\n    const BASE_URL = 'https://pixabay.com/api';\r\n  return fetch(\r\n    `${BASE_URL}/?q=${name}&page=1&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${page*12}`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(new Error('No response from server'));\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchImages,\r\n}\r\n\r\nexport default api;\r\n\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryErrorView from '../ImageGalleryErrorView/ImageGalleryErrorView';\r\nimport ImageLoader from '../ImageLoader/ImageLoader';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport Button from '../Button/Button';\r\nimport imagesAPI from '../services/images-api';\r\n\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nclass ImagesGalleryInfo extends Component {\r\n  state = {\r\n    images: [],\r\n    error: null,\r\n    status: Status.IDLE,\r\n    page: 1,\r\n  };\r\n\r\n \r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.imageName;\r\n    const nextName = this.props.imageName;\r\n    const prevPage = prevState.page;\r\n    const nextPage = this.state.page;\r\n\r\n    if (prevName !== nextName) {\r\n      this.setState({ page: 1 });\r\n    }\r\n\r\n    if (prevName !== nextName || prevPage !== nextPage) {\r\n      this.setState({ status: Status.PENDING });\r\n\r\n      imagesAPI.fetchImages(nextName, nextPage)\r\n        .then(images => this.setState({ images, status: Status.RESOLVED }))\r\n        .catch(error => this.setState({ error, status: Status.REJECTED }));\r\n    }\r\n\r\n  }\r\n\r\n\r\n  onClickLoadMore = () => {\r\n    this.setState(prevState => ({\r\n      page: prevState.page + 1,\r\n      \r\n    }));\r\n\r\n  };\r\n\r\n  render() {\r\n    const { error, status } = this.state;\r\n\r\n    if (status === 'idle') {\r\n      return <p>enter your request</p>;\r\n    }\r\n\r\n    if (status === 'pending') {\r\n      return <ImageLoader />;\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n      return <ImageGalleryErrorView message={error.message} />;\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return (\r\n        <>\r\n          <ImageGallery images={this.state.images.hits} />\r\n          <Button onClick={this.onClickLoadMore} page={this.state.page} />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nImagesGalleryInfo.propTypes = {\r\n  imageName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImagesGalleryInfo;\r\n\r\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './components/Searchbar/Searchbar'\nimport ImageGalleryInfo from './components/ImageGalleryInfo/ImagesGalleryInfo'\n\n\nclass App extends Component {\n  state = {\n    imageName: '',\n  };\n\n  \n  handleFormSubmit = imageName => {\n    this.setState({ imageName });\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n\n        <ImageGalleryInfo imageName={this.state.imageName} />\n        <ToastContainer autoClose={3000} />\n      </>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3yMmi\",\"SearchForm\":\"Searchbar_SearchForm__1e-V1\",\"SearchFormButton\":\"Searchbar_SearchFormButton__16eYf\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__B3Rn3\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3fgsY\"};"],"sourceRoot":""}